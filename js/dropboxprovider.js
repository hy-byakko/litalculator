// Generated by CoffeeScript 1.6.3
define(['jquery', 'underscore', 'Dropbox', 'eventmgr'], function($, _, Dropbox, eventManager) {
  var DropboxProvider, client;
  client = new Dropbox.Client({
    key: 't35la3qyv5bvtry'
  });
  client.authDriver(new Dropbox.AuthDriver.Popup({
    receiverUrl: "http://localhost:4000/dropbox-oauth-receiver.html",
    rememberUser: true
  }));
  client.authenticate({
    interactive: false
  }, function(error) {
    if (error) {
      return alert('Authentication error: ' + error);
    }
  });
  if (client.isAuthenticated()) {
    eventManager.trigger('remotesync');
  }
  return DropboxProvider = (function() {
    function DropboxProvider() {}

    DropboxProvider.client = client;

    DropboxProvider.getStore = function() {
      var _this = this;
      return $.Deferred(function(deferred) {
        if (_this.store) {
          return deferred.resolve(_this.store);
        }
        return client.getDatastoreManager().openDefaultDatastore(function(error, datastore) {
          if (error) {
            console.log('Error opening default datastore: ' + error);
            return deferred.reject(error);
          } else {
            _this.store = datastore;
            return deferred.resolve(_this.store);
          }
        });
      });
    };

    DropboxProvider.cleanTable = function(name) {
      return this.getStore().done(function(store) {
        var records;
        records = store.getTable(name).query();
        return _.each(records, function(record) {
          return record.deleteRecord();
        });
      });
    };

    return DropboxProvider;

  })();
});
