// Generated by CoffeeScript 1.6.3
define(['jquery', 'underscore', 'backbone', 'moment', 'common'], function($, _, Backbone, moment, Common) {
  'use strict';
  return Backbone.Model.extend({
    defaults: function() {
      return {
        worker: 0
      };
    },
    categoryName: function() {
      return (Common.getCategory(this.get('category')) || {}).text;
    },
    detailName: function() {
      return (Common.getDetail(this.get('category'), this.get('detail')) || {}).text;
    },
    workerName: function() {
      return (Common.getWorker(this.get('worker')) || {}).text;
    },
    detailEditable: function() {
      return !_.isUndefined(this.get("category"));
    },
    isValid: function() {
      return this.getNum() && !_.isUndefined(Common.getDetail(this.get('category'), this.get('detail')));
    },
    setNum: function(value) {
      var e, evalVal;
      if (/^\d+$/.test(value)) {
        return this.set('num', parseInt(value));
      } else {
        try {
          evalVal = eval(value);
          if (_.isNaN(parseInt(evalVal))) {
            return this.set('num', void 0);
          } else {
            this.set('num', value);
            return this.set('evalNum', evalVal);
          }
        } catch (_error) {
          e = _error;
          return console.log(e);
        }
      }
    },
    getNum: function() {
      if (!_.isUndefined(this.get('num'))) {
        if (_.isNumber(this.get('num'))) {
          return this.get('num');
        } else {
          return this.get('evalNum');
        }
      }
    }
  });
});
