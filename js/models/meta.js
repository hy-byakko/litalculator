// Generated by CoffeeScript 1.6.3
define(['jquery', 'underscore', 'backbone', 'common'], function($, _, Backbone, common) {
  'use strict';
  var Meta, Metas, defaultMetaData;
  defaultMetaData = {
    categories: [
      {
        text: '-',
        value: void 0
      }, {
        text: '常规款',
        value: 0,
        details: [
          {
            text: '-',
            value: void 0
          }, {
            text: '水款',
            value: 0
          }, {
            text: '票款',
            value: 1
          }, {
            text: '押桶',
            value: 2
          }, {
            text: '退桶',
            value: 3
          }
        ]
      }, {
        text: '票',
        value: 1,
        details: [
          {
            text: '-',
            value: void 0
          }, {
            text: '矿物质',
            value: 0
          }, {
            text: '纯净水',
            value: 1
          }, {
            text: '九龙山水',
            value: 2
          }, {
            text: '弱碱性',
            value: 3
          }
        ]
      }, {
        text: '销售款',
        value: 2,
        details: [
          {
            text: '-',
            value: void 0
          }, {
            text: '饮水机[万爱]',
            value: 0
          }, {
            text: '饮水机[华生]',
            value: 1
          }, {
            text: '饮水机[长城]',
            value: 2
          }, {
            text: '饮水机[东瀛]',
            value: 3
          }, {
            text: '压水器',
            value: 4
          }, {
            text: '小水箱费',
            value: 5
          }
        ]
      }
    ],
    workers: [
      {
        text: '店内',
        value: 0
      }, {
        text: '老金',
        value: 1
      }, {
        text: '小华',
        value: 2
      }, {
        text: '陆德其',
        value: 3
      }, {
        text: '陈国伟',
        value: 4
      }
    ]
  };
  Meta = Backbone.Model.extend({
    defaults: function() {
      return {
        createTime: new Date,
        modifyTime: new Date
      };
    },
    remote: {
      table: 'metas',
      key: 'version'
    },
    init: function() {
      var defer, metas,
        _this = this;
      defer = $.Deferred();
      metas = new Metas;
      metas.fetch().done(function() {
        return metas.getOrCreate({
          version: 1
        }).done(function(meta) {
          return meta.remoteSync().done(function(meta) {
            if (!meta.get('data')) {
              meta.set('data', defaultMetaData);
            }
            _this.set(meta.toJSON());
            return defer.resolve(_this);
          });
        });
      });
      return defer.promise();
    },
    toRemoteFormat: function() {
      var item;
      item = this.toJSON();
      if (item.data) {
        item.data = JSON.stringify(item.data);
      }
      delete item.id;
      return item;
    },
    toLocalFormat: function(item) {
      if (item.data) {
        item.data = JSON.parse(item.data);
      }
      return item;
    }
  });
  Metas = Backbone.Collection.extend({
    model: Meta,
    store: new Backbone.IndexedDB.Store('metas')
  });
  return Meta;
});
